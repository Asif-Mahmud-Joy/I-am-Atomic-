const axios = require('axios');

function isValidPackageName(name) {
  return /^[a-z0-9\-_]+$/i.test(name);
}

const sleep = ms => new Promise(res => setTimeout(res, ms));

async function smoothTyping(api, threadID, baseText, duration = 2500, interval = 600) {
  const dots = ["", ".", "..", "..."];
  let sent = await api.sendMessage(baseText, threadID);
  let elapsed = 0, i = 0;
  while (elapsed < duration) {
    await sleep(interval);
    i = (i + 1) % dots.length;
    try {
      await api.unsendMessage(sent.messageID);
      sent = await api.sendMessage(baseText + dots[i], threadID);
    } catch {}
    elapsed += interval;
  }
  try { await api.unsendMessage(sent.messageID); } catch {}
}

module.exports = {
  config: {
    name: "romanticnpminfo",
    version: "3.0.0",
    author: "ЁЭРАЁЭРмЁЭРвЁЭРЯ ЁЭРМЁЭРЪЁЭРбЁЭРжЁЭРоЁЭРЭ",
    countDown: 5,
    role: 0,
    category: "tools",
    shortDescription: "ЁЯФН npm package info with romantic flair ЁЯТМ",
    longDescription: "Search npm package info with romantic UI and typing animation.",
    guide: { en: "{pn} <package-name>" }
  },

  onStart: async function({ api, event, args }) {
    let input = args.join(" ").trim();

    if (!input) {
      return api.sendMessage(
        "ЁЯТФ ржжрзЛрж╕рзНржд, ржкрзНржпрж╛ржХрзЗржЬ ржирж╛ржо ржжрж┐рждрзЗ ржнрзБрж▓ ржХрж░рзЛ ржирж╛! ржпрзЗржоржи: romanticnpminfo axios ЁЯУж",
        event.threadID
      );
    }

    if (!isValidPackageName(input)) {
      return api.sendMessage(
        "тЭМ ржнрж╛ржЗ, ржкрзНржпрж╛ржХрзЗржЬ ржирж╛ржо рж╢рзБржзрзБ ржЗржВрж░рзЗржЬрж┐ ржЕржХрзНрж╖рж░, рж╕ржВржЦрзНржпрж╛, - ржЕржержмрж╛ _ ржерж╛ржХрждрзЗ ржкрж╛рж░рзЗред ржЖрж░рзЗржХржмрж╛рж░ ржнрж╛рж▓рзЛ ржХрж░рзЗ рж▓рж┐ржЦрзЛ! тЭдя╕П",
        event.threadID
      );
    }

    try {
      await smoothTyping(api, event.threadID, "ЁЯТМ рждрзЛржорж╛рж░ ржЬржирзНржп ржкрзНржпрж╛ржХрзЗржЬрзЗрж░ рждржерзНржп ржЦрзБржБржЬржЫрж┐... ржПржХржЯрзБ ржзрзИрж░рзНржп ржзрж░рзЛ тЬи");

      const query = encodeURIComponent(input);
      const res = await axios.get(`https://registry.npmjs.org/${query}`);

      if (!res.data) {
        return api.sendMessage(
          "ЁЯШФ ржУрж╣рзЛ! ржкрзНржпрж╛ржХрзЗржЬрзЗрж░ рждржерзНржп ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред ржирж╛ржо ржарж┐ржХ ржЖржЫрзЗ рждрзЛ? ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзЛ ЁЯУжЁЯТФ",
          event.threadID
        );
      }

      const data = res.data;
      const latestVersion = data["dist-tags"]?.latest || "ржирж╛ржЗ";
      const info = data.versions?.[latestVersion] || {};

      const message =
        `ЁЯТЦ *ржкрзНржпрж╛ржХрзЗржЬрзЗрж░ ржирж╛ржо:* ${data.name}\n` +
        `тЬи *ржмрж░рзНржгржирж╛:* ${info.description || "ржХрзЛржирзЛ ржмрж░рзНржгржирж╛ ржирзЗржЗ"}\n` +
        `ЁЯСд *рж▓рзЗржЦржХ:* ${(info.author && info.author.name) || "ржЕржЬрж╛ржирж╛"}\n` +
        `ЁЯУж *рж╕рж░рзНржмрж╢рзЗрж╖ ржнрж╛рж░рзНрж╕ржи:* ${latestVersion}\n` +
        `ЁЯХТ *ржкрзНрж░ржХрж╛рж╢рзЗрж░ рж╕ржорзЯ:* ${data.time ? new Date(data.time[latestVersion]).toLocaleString('bn-BD') : "ржЕржЬрж╛ржирж╛"}\n` +
        `ЁЯФЧ *рж▓рж┐ржЩрзНржХ:* https://www.npmjs.com/package/${data.name}\n\n` +
        `ЁЯТМ рждрзЛржорж╛рж░ ржЬржирзНржп ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржУ рждржерзНржп рж╕рж░ржмрж░рж╛рж╣ ржХрж░рж▓рж╛ржо! ржЖрж░рзЛ ржЬрж╛ржирждрзЗ ржкрж╛рж░рзЛ тЭдя╕ПтЬи`;

      return api.sendMessage(message, event.threadID);
    } catch (err) {
      console.error("ЁЯФе npm info error:", err);
      return api.sendMessage(
        `тЭМ ржжрзБржГржЦрж┐ржд, ржХрж┐ржЫрзБ ржнрзБрж▓ рж╣рзЯрзЗржЫрзЗред\nЁЯТФ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд: ${err.message}\nЁЯУж ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзЛ, ржЖржорж┐ ржЖржЫрж┐ рждрзЛржорж╛рж░ ржкрж╛рж╢рзЗ! тЭдя╕П`,
        event.threadID
      );
    }
  }
};
