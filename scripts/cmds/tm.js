const { TempMail } = require("1secmail-api");

function generateRandomId(length = 6) {
  const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';
  let randomId = '';
  for (let i = 0; i < length; i++) {
    randomId += characters.charAt(Math.floor(Math.random() * characters.length));
  }
  return randomId;
}

module.exports = {
  config: {
    name: 'tm',
    version: '2.3.0',
    author: "Mr.Smokey[Asif Mahmud]", // do not change credits
    countDown: 5,
    role: 0,
    shortDescription: {
      en: 'Generate temporary email (auto get inbox)',
      bn: '‡¶Ö‡¶∏‡ßç‡¶•‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶® (‡¶∏‡ßç‡¶¨‡¶Ø‡¶º‡¶Ç‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶á‡¶®‡¶¨‡¶ï‡ßç‡¶∏)',
      ban: 'Ekta temporary email toiri koren (auto inbox dekhanor jonno)'
    },
    category: 'generate',
    guide: {
      en: '[tempmail] - Generates a temporary email and checks inbox automatically.',
      bn: '[tempmail] - ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ö‡¶∏‡ßç‡¶•‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá ‡¶è‡¶¨‡¶Ç ‡¶á‡¶®‡¶¨‡¶ï‡ßç‡¶∏ ‡¶∏‡ßç‡¶¨‡¶Ø‡¶º‡¶Ç‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶≠‡¶æ‡¶¨‡ßá ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßá‡•§',
      ban: '[tempmail] - Ekta temporary email toiri kore, auto message check kore.'
    }
  },

  onStart: async function ({ api, event }) {
    const reply = (msg) => api.sendMessage(msg, event.threadID, event.messageID);

    try {
      const mail = new TempMail(generateRandomId());
      mail.autoFetch();

      if (mail && mail.address) {
        reply(`üìß Temporary Email Generated / ‡¶ü‡ßá‡¶Æ‡ßç‡¶™ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã ‡¶π‡¶≤‡ßã:
${mail.address}

‚è≥ Waiting for incoming messages... / ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶Ü‡¶∏‡¶æ‡¶∞ ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...`);
      }

      const fetch = async () => {
        try {
          const mails = await mail.getMail();
          if (!mails.length) return;

          const latest = mails[0];
          const msg = `üì• Message Received! / ‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Æ‡ßá‡¶á‡¶≤ ‡¶™‡ßá‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡¶®!

üî∏ From: ${latest.from}
üî∏ Subject: ${latest.subject}
üìù Message: ${latest.textBody}
üìÖ Date: ${latest.date}`;

          reply(msg + `\n\n‚ö†Ô∏è The email will now be deleted. / ‡¶Æ‡ßá‡¶á‡¶≤‡¶ü‡¶ø ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶æ ‡¶π‡¶¨‡ßá ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶§‡ßç‡¶§‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶∞‡¶£‡ßá‡•§`);
          await mail.deleteMail();
        } catch (err) {
          console.error("Error fetching mail:", err);
        }
      };

      // Auto fetch every 3 seconds
      const intervalId = setInterval(fetch, 3000);

      // Stop polling after 2 minutes to avoid memory leak
      setTimeout(() => clearInterval(intervalId), 2 * 60 * 1000);

    } catch (err) {
      console.error("TempMail Error:", err);
      reply("‚ùå Could not create or check temp mail. / ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶§‡ßà‡¶∞‡¶ø ‡¶¨‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá: " + err.message);
    }
  }
};
