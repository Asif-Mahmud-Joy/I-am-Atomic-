const axios = require("axios");

module.exports = {
  config: {
    name: "ocr",
    version: "2.0",
    author: "тЬи Mr.Smokey [Asif Mahmud] тЬи",
    countDown: 10,
    role: 0,
    shortDescription: {
      en: "Extract text from image using OCR",
      bn: "ЁЯЦ╝я╕П ржЫржмрж┐рж░ ржнрзЗрждрж░рзЗрж░ рж▓рзЗржЦрж╛ ржкржбрж╝рзЗ ржлрзЗрж▓рзБржи"
    },
    longDescription: {
      en: "Reply to an image or paste a direct image link to extract text using OCR.",
      bn: "ржПржЗ ржХржорж╛ржирзНржб ржжрж┐ржпрж╝рзЗ ржЖржкржирж┐ ржХрзЛржирзЛ ржЫржмрж┐рж░ ржоржзрзНржпрзЗ ржерж╛ржХрж╛ рж▓рзЗржЦрж╛ ржмрзЗрж░ ржХрж░рзЗ ржирж┐рждрзЗ ржкрж╛рж░ржмрзЗржиред рж╢рзБржзрзБ ржЫржмрж┐рждрзЗ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрж┐ржи ржЕржержмрж╛ ржЗржорзЗржЬ рж▓рж┐ржВржХ ржкрзЗрж╕рзНржЯ ржХрж░рзБржиред"
    },
    category: "utility",
    guide: {
      en: "{pn} reply to an image",
      bn: "{pn} ржПржХржЯрж┐ ржЫржмрж┐рждрзЗ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрж┐ржи"
    }
  },

  onStart: async function ({ event, api, args }) {
    try {
      let imageUrl = null;

      if (event.messageReply && event.messageReply.attachments.length > 0 && event.messageReply.attachments[0].type === 'photo') {
        imageUrl = event.messageReply.attachments[0].url;
      } else if (args.length > 0) {
        imageUrl = args[0];
      } else {
        return api.sendMessage("ЁЯУ╕ ржжржпрж╝рж╛ ржХрж░рзЗ ржПржХржЯрж┐ ржЫржмрж┐рждрзЗ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрж┐ржи ржЕржержмрж╛ ржЗржорзЗржЬ рж▓рж┐ржВржХ ржжрж┐ржиред", event.threadID);
      }

      const imgUploadRes = await axios.get(`https://milanbhandari.imageapi.repl.co/imgur?link=${encodeURIComponent(imageUrl)}`);
      const hostedImageURL = imgUploadRes?.data?.image;

      if (!hostedImageURL) throw new Error("Image upload failed");

      const ocrRes = await axios.get(`https://milanbhandari.imageapi.repl.co/ocr?url=${encodeURIComponent(hostedImageURL)}`);

      if (!ocrRes.data.text || ocrRes.data.text.trim() === "") {
        return api.sendMessage("ЁЯШФ ржХрзЛржирзЛ рж▓рзЗржЦрж╛ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ ржЫржмрж┐рж░ ржоржзрзНржпрзЗред", event.threadID);
      }

      api.sendMessage(`ЁЯУД ржЫржмрж┐рж░ рж▓рзЗржЦрж╛:
----------------------\n${ocrRes.data.text}`.trim(), event.threadID);

    } catch (err) {
      console.error("[тЭМ OCR COMMAND ERROR]", err);
      api.sendMessage("тЭМ OCR ржЪрж╛рж▓рж╛ржирзЛрж░ рж╕ржоржпрж╝ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред", event.threadID);
    }
  }
};
