const axios = require("axios");

module.exports = {
  config: {
    name: "‚ò¢ùêÄùêìùêéùêåùêàùêÇ‚öõ",
    version: "3.0",
    author: "ùêÄùê¨ùê¢ùêü ùêåùêöùê°ùê¶ùêÆùêù",
    countDown: 5,
    role: 0,
    shortDescription: "Atomic information system",
    longDescription: "Premium response to Atomic keyword with bot & owner information",
    category: "no prefix",
  },

  onStart: async function () {},

  onChat: async function ({ event, message, api }) {
    try {
      const trigger = event.body?.toLowerCase().trim();
      if (trigger === "atomic") {
        // Show typing animation
        api.setMessageReaction("‚è≥", event.messageID, () => {}, true);
        
        setTimeout(async () => {
          try {
            const videoUrl = "https://files.catbox.moe/pm6rfq.mp4";
            const response = await axios.get(videoUrl, { responseType: 'stream' });

            await message.reply({
              body: `‚ò¢Ô∏è ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚ò¢Ô∏è\n\n‚öõÔ∏è ùóîùóßùó¢ùó†ùóúùóñ ùó¶ùó¨ùó¶ùóßùóòùó† ùóúùó°ùóôùó¢\n\nüëë ùó¢ùòÑùóªùó≤ùóø: ùóîùòÄùó∂ùó≥ ùó†ùóÆùóµùó∫ùòÇùó±\n\nü§ñ ùóïùóºùòÅ ùó°ùóÆùó∫ùó≤: ‚ò¢ùêÄùêìùêéùêåùêàùêÇ‚öõ\n\nüí† ùó©ùó≤ùóøùòÄùó∂ùóºùóª: ùüØ.ùü¨\n\n‚ò¢Ô∏è ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚ò¢Ô∏è\n‚ú® ùó£ùóºùòÑùó≤ùóøùó≤ùó± ùóØùòÜ ùóîùòÄùó∂ùó≥ ùó†ùóÆùóµùó∫ùòÇùó± ùóßùó≤ùó∞ùóµ`,
              attachment: response.data
            });
            
            // Remove typing indicator
            api.setMessageReaction("", event.messageID, () => {}, true);
          } catch (err) {
            console.error("Error sending Atomic response:", err);
            api.setMessageReaction("‚ùå", event.messageID, () => {}, true);
          }
        }, 2000); // 2-second typing simulation
      }
    } catch (err) {
      console.error("Error in Atomic command:", err);
      message.reply("‚ö†Ô∏è System error detected. Please try again later.");
    }
  }
};
