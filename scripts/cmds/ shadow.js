const axios = require("axios");

module.exports = {
  config: {
    name: "‚ò¢ùêÄùêìùêéùêåùêàùêÇ‚öõ",
    version: "4.0",
    author: "ùêÄùê¨ùê¢ùêü ùêåùêöùê°ùê¶ùêÆùêù",
    countDown: 5,
    role: 0,
    shortDescription: "Atomic Core System",
    longDescription: "Premium atomic information system with enhanced UI/UX",
    category: "system",
  },

  onStart: async function () {},

  onChat: async function ({ event, message, api }) {
    try {
      const trigger = event.body?.toLowerCase().trim();
      if (trigger === "atomic") {
        // Premium atomic typing animation
        api.setMessageReaction("‚ò¢Ô∏è", event.messageID, () => {}, true);
        
        // Atomic core animation sequence
        setTimeout(async () => {
          try {
            const videoUrl = "https://files.catbox.moe/pm6rfq.mp4";
            const response = await axios.get(videoUrl, { responseType: 'stream' });

            await message.reply({
              body: `‚ò¢Ô∏è ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ATOMIC CORE SYSTEM ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ò¢Ô∏è\n\n` +
                     `‚öõÔ∏è ùóîùóßùó¢ùó†ùóúùóñ ùó¶ùó¨ùó¶ùóßùóòùó† ùóúùó°ùóôùó¢ùó•ùó†ùóîùóßùóúùó¢ùó°\n` +
                     `‚ò£Ô∏è ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n` +
                     `üëë ùó¢ùòÑùóªùó≤ùóø ¬ª ùóîùòÄùó∂ùó≥ ùó†ùóÆùóµùó∫ùòÇùó±\n` +
                     `ü§ñ ùóïùóºùòÅ ¬ª ‚ò¢ùêÄùêìùêéùêåùêàùêÇ‚öõ\n` +
                     `üí† ùó©ùó≤ùóøùòÄùó∂ùóºùóª ¬ª ùü∞.ùü¨\n` +
                     `‚ò¢Ô∏è ùó¶ùòÅùóÆùòÅùòÇùòÄ ¬ª ùó¢ùóΩùó≤ùóøùóÆùòÅùó∂ùóºùóªùóÆùóπ\n\n` +
                     `‚ò£Ô∏è ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n` +
                     `‚ö° ùó£ùóºùòÑùó≤ùóøùó≤ùó± ùóØùòÜ ùóîùòÄùó∂ùó≥ ùó†ùóÆùóµùó∫ùòÇùó± ùóßùó≤ùó∞ùóµ`,
              attachment: response.data
            });
            
            // Update reaction to completed state
            api.setMessageReaction("‚öõÔ∏è", event.messageID, () => {}, true);
          } catch (err) {
            console.error("ATOMIC SYSTEM ERROR:", err);
            api.setMessageReaction("‚ò£Ô∏è", event.messageID, () => {}, true);
          }
        }, 2500); // Enhanced 2.5-second typing simulation
      }
    } catch (err) {
      console.error("CRITICAL SYSTEM FAILURE:", err);
      message.reply("‚ò¢Ô∏è ATOMIC CORE FAILURE: SYSTEM RECOVERY INITIATED");
    }
  }
};
