module.exports.config = {
    name: "chudi",
    version: "6.0",
    role: 1,
    author: "ЁЭРАЁЭРмЁЭРвЁЭРЯ",
    description: "Realistic Chat-Style Interaction",
    category: "fun",
    guide: "Mention target user",
    coolDown: 300
};

module.exports.onStart = async function ({ api, args, event }) {
    const mention = Object.keys(event.mentions)[0];
    if (!mention) {
        // Simulate real typing before error message
        api.sendTypingIndicator(event.threadID);
        await new Promise(resolve => setTimeout(resolve, 2000));
        return api.sendMessage("тЭМ ржЯрж╛рж░рзНржЧрзЗржЯ рж╕рзНржкрзЗрж╕рж┐ржлрж╛ржЗ ржХрж░рзЗржирж┐! ржХрж╛ржХрзЗ ржЪрзБржжржмрзЛ? @ржорзЗржирж╢ржи ржХрж░рзБржи...", event.threadID);
    }

    const name = event.mentions[mention];
    const tag = { id: mention, tag: name };

    // Realistic typing patterns
    const simulateThinking = async (duration = 1500) => {
        api.sendTypingIndicator(event.threadID);
        await new Promise(resolve => setTimeout(resolve, duration));
    };

    // Authentic message timing variations
    const humanizedDelay = (base = 1000) => base + Math.random() * 2000;

    // Message list with realistic variations
    const messages = [
        {text: "рждрзЛрж░рзЗ ржЪрзБржжрж▓рзЛ BOSS ASIF!", delay: 1200},
        {text: "ржнрзЛржжрж╛ржЗ ржЬрж╛ржирзЗ ржЪрзЛржжрж╛рж░ ржоржЬрж╛ рждрзЛрж░ ржорж╛ржХрзЗ ржЬрж┐ржЬрзНржЮрзЗрж╕ ржХрж░ ЁЯе░", delay: 1800},
        {text: "ржирж┐рж╢рж┐ рж░рж╛рждрзЗ рждрзЛрж░ ржорж╛ржХрзЗ ржЪрзБржжрзЗ ржкрзЗржпрж╝рзЗржЫрж┐рж▓рж╛ржо ржЕржирзЗржХ ржЖржиржирзНржж ЁЯдйтЬКЁЯП╗", delay: 2500},
        {text: "ржЦрж╛ржВржХрж┐рж░ ржкрзЛрж▓рж╛ рждрж░ ржХржЪрж┐ ржмрзЛржи рж░рзЗ ржЪрзБржжрж┐ ЁЯШН..", delay: 1100},
        {text: "ржорж╛ржжрж╛рж░ржЪрзЛржж рждрж░ ржЖржорзНржорзБ ржкржо ржкржо ржЦрж╛ржВржХрж┐рж░ ржкрзЛ ЁЯР░", delay: 1600},
        {text: "рждрзБрж░ ржорж╛рж░рзЗ ржЖржЯрж▓рж╛ржирзНржЯрж┐ржХ ржорж╣рж╛рж╕рж╛ржЧрж░рзЗ ржЪрзБржжрж┐ ЁЯЩИ", delay: 2200},
        {text: "ржЦрж╛ржВржХрж┐ ржорж╛ржЧрж┐рж░ ржкрзЛрж▓рж╛ ржХржерж╛ ржХ ржХржо ржХржо...", delay: 900},
        {text: "рждрж░ ржЖржорзНржорзБ рж░рзЗ ржЪрзБржжрзЗ ржмрж╛ржирж╛ржорзБ ржЖржЗржЯрзЗржо ржмрзЛржо", delay: 1400},
        {text: "depression ржерзЗржХрзЗржУ рждрж░ ржорж╛ржЗрж░рзЗ ржЪрзБ*** ржжрж┐ ЁЯдм", delay: 1900},
        {text: "рждрж░ ржЖржорзНржорзБ рж░рзЗ ржЖржЪрж╛рж░ ржПрж░ рж▓рзЛржн ржжрзЗржЦрж┐рзЯрзЗ ржЪрзБржжрж┐ ЁЯдм", delay: 1300},
        {text: "ржмрж╛ржирзНржжрж┐рж░ ржкрзЛрж▓рж╛ рждрж░ ржХржЪрж┐ ржмрзЛржирзЗрж░ ржнрзБржжрж╛ ржлрж╛ржХ ржХрж░ ЁЯдЯ", delay: 1700},
        {text: "ржерзБрждрзБ ржжрж┐рзЯрзЗ ржнрзБржжрж╛рзЯ ржжржи ржбрзБржХрж╛ржорзБ ЁЯТж", delay: 800},
        {text: "ржЙржлржлржл ржЦрж╛ржжрзНржжрж╛ржорж╛ ржорж╛ржЧрж┐рж░ ржкрзЛрж▓рж╛ ЁЯТЙ", delay: 2100},
        {text: "рждрж░ ржЖржорзНржорзБрж░ ржХрж╛рж▓рж╛ ржнрзБржжрж╛рзЯ ржЖржорж╛рж░ ржорж╛рж▓ ржЖржЙржЯ", delay: 1500},
        {text: "рждрж░ ржХржЪрж┐ ржмрзЛржи рж░рзЗ ржЙржкрзНрждрж╛ ржХрж░рзЗ ржПржмрж╛рж░ ржЪрзБржжржмрзЛ ЁЯШИ", delay: 2300},
        {text: "ржЕржирж▓рж╛ржЗржирзЗ ржЧрж╛рж▓рж┐ ржмрж╛ржЬ рж╣рзЯрзЗ ржЧрзЗржЫржд ржорж╛ржЧрж┐рж░ ржкрзЛрж▓рж╛", delay: 1800},
        {text: "ржПржоржи ржЪрзБржжрж╛ ржжрж┐ржорзБ рж▓рж╛ржЗржл ржЯрж╛ржЗржо ржоржирзЗ рж░рж╛ржЦржмрж┐ ЁЯШШ", delay: 1600},
        {text: "ржмрж╛рждрж┐ржЬрж╛ рж╢рзБржи...", delay: 1200},
        {text: "рждрж░ ржЖржорзНржорзБ рж░рзЗ ржЪрзБржжрж▓рзЗ рж░рж╛ржЧ ржХрж░ржмрж┐ ржирж╛ рждрзЛ? ЁЯШП", delay: 2000},
        {text: "ржЖржЪрзНржЫрж╛ ржЬрж╛ рж░рж╛ржЧ ржХрж░рж┐рж╕ ржирж╛...", delay: 1100},
        {text: "рждрж░ ржЖржорзНржорзБрж░ ржХрж╛рж▓рж╛ ржнрзБржжрж╛рзЯ ржЖрж░ ржЪрзБржжрж▓рж╛ржо ржирж╛ рждрзЛ", delay: 1900},
        {text: "ржмрзЛржи ржПрж░ ржЬрж╛ржорж╛ ржЯрж╛ ржЦрзБрж▓рзЗ ржжрзЗ тЬЛ", delay: 900},
        {text: "рж╣рж╛ржЗ ржорж╛ржжрж╛рж░ржЪрзЛржж ЁЯШТ", delay: 700},
        {text: "рждрж░ ржмрзНржпрж╛рж╢рж╛ ржЬрж╛рждрзЗрж░ ржЖржорзНржорзБ ржЯрж╛ рж░рзЗ ржЖржжрж░ ржХрж░рзЗ ржХрж░рзЗ ржЪрзБржжрж┐", delay: 2500},
        {text: "ржЪрзБржжрж╛ ржХрж┐ ржЖрж░рзЛ ржЦрж╛ржмрж┐ ржорж╛ржЧрж┐рж░ ржкрзЛрж▓? ЁЯдЦ", delay: 1600},
        {text: "ржнрж╛ржЧрж▓рзЗ рждрзБрж░ ржорж╛рж░рзЗ рждрзБрж░ ржмрж╛ржк ржХрж╛ржХрж╛рзЯ рж╕ржмрж╛ржЗ ржПржХ рж▓ржЧрзЗ ржЪрзБржжрзЗ ЁЯМ╕", delay: 2200},
        {text: "ржорж╛ржжрж╛рж░ржЪрзЛржж ЁЯШН..", delay: 600},
        {text: "ржПржд ржХржерж╛ ржмрж╛ржж ржЪрж▓...", delay: 1000},
        {text: "рзи ржЬржи ржорж┐рж▓рзЗ рждрж░ ржорж╛рж░рзЗ ржзрж╖ржи ржХрж░рж┐ ЁЯжЛ", delay: 1800},
        {text: "ржмрзНржпрж╛рж╢рзНржпрж╛ ржорж╛ржЧрж┐рж░ ржкрзЛрж▓рж╛  ЁЯТФ!", delay: 800},
        {text: "рждрж░ ржорж╛рж░ ржХржЪрж┐ ржнрзБржжрж╛рзЯ рзнрзж ржоржг ржмрж╛ржЧрзБржи ржЪрж╛рж╖ ржХрж░ржорзБ ЁЯТж", delay: 2100},
        {text: "ржкрждрж┐рждрж╛ ржорж╛ржЧрж┐рж░ ржкрзЛрж▓рж╛ ____", delay: 1200},
        {text: "рждрзЛрж░ ржорж╛ржХрзЗ рж╢рзЗржЦ рж╣рж╛рж╕рж┐ржирж╛ ржПрж░ ржЬрж╛ржорж╛ржЗ ржирж░рзЗржирзНржжрзНрж░ ржорзЛржжрж┐ ржХрзЗ ржжрж┐рзЯрзЗ ржкрзБржЯржХрж┐ ржорж╛рж░рж┐ЁЯШЭ", delay: 2800},
        {text: "рждрж░ ржорж╛рж░рзЗ ржЪрзБржжрж┐__", delay: 700},
        {text: "ржЖржкржирж╛рж░ ржорж╛рж░рзЗ ржнрзБрждрзЗрж░ ржЧрж▓рзНржк рж╕рзБржирж┐рзЯрзЗ ржЖрж╕рждрзЗ ржЖрж╕рждрзЗ...", delay: 1800},
        {text: "рж╢рж┐рж░ рж╢рж┐рж░ ржнрж╛ржмрзЗ ржЪрзБржжрждрзЗ ржЬрж╛рзЯ ЁЯСН", delay: 900},
        {text: "рждрж░ ржмрзЛржи рж░рзЗ ржкрж╛рзЯржЬрж╛ржорж╛ ржЦрзБрж▓рзЗ ржЪрзБржжрж┐ ЁЯдг", delay: 1300},
        {text: "ржЙржорзНржоржорзНржорж╛ рждрж░ ржмрзЛржи ржПрж░ржХржЪрж┐ ржнрзБржжрж╛рзЯЁЯТЙ", delay: 1100},
        {text: "DNA ржЯрзЗрж╖рзНржЯ ржХрж░рж╛ ржжрзЗржЦржмрж┐ ржЖржорж╛рж░ ржЪрзБржжрж╛ рждрзЗржЗ рждрж░ ржЬржирзНржоред", delay: 2200},
        {text: "ржХрж╛ржорж▓рж╛ ржорж╛ржЧрж┐рж░ ржкрзЛрж▓рж╛  тЬЛ", delay: 600},
        {text: "Welcome ржорж╛ржЧрж┐рж░ ржкрзЛрж▓рж╛ ЁЯе░", delay: 800},
        {text: "ржнрзЛржжрж╛ ржЬрж╛ржирзЗ ржЪрзЛржжрж╛рж░ ржоржЬрж╛ рждрзЛрж░ ржорж╛ржХрзЗ ржПржЦржи ржЪрзБржжрж╛ рж╣ржмрзЗ", delay: 2000},
        {text: "рждрж░ ржХржЪрж┐ ржмрзЛржи ржПрж░ ржкржо ржкржоЁЯШН..", delay: 1200},
        {text: "рждрзЛрж░ ржорж╛рж░рзЗ рж╕рж╛рж▓ржорж╛рж░ ржмрж┐ржЪрзНржЫрзЗржжрж┐ ржЧрж╛ржи рж╢рзБржирзЗ ржЪрзБржжржмрзЛ))-!!", delay: 2400},
        {text: "рзирзж ржЯрж╛ржХрж╛ ржП ржкрждрж┐рждрж╛ ржорж╛ржЧрж┐рж░ ржкрзЛрж▓рж╛ __", delay: 1500},
        {text: "рждрзЛрж░ ржорж╛ржХрзЗ рзйрзмрзл ржжрж┐ржи ржкржжрзНржорж╛ рж╕рзЗрждрзБржи ржирж┐ржЪрзЗ ржирж┐ржпрж╝рзЗ ржЪрзБржжрж┐ ЁЯе╡", delay: 2300},
        {text: "ржмрж╕рзНрждрж┐рж░ ржЫрзЗрж▓рзЗ ржЕржирж▓рж╛ржЗржирзЗрж░ ржХрж┐ржВ__", delay: 1100},
        {text: "рждрзЛрж░ ржорж╛рж░ ржнрзЛржжрж╛ржпрж╝ ржЙржорзНржорж╛рж╣", delay: 900},
        {text: "рждрж░ ржЖржорзНржорзБ рж░рзЗ ржкрж╛рзЯржЬрж╛ржорж╛ ржЦрзБрж▓рзЗ ржЪрзБржжрж┐ ЁЯдг", delay: 1300},
        {text: "ржЖрж╣ ржЖрж╣ рждрзЛрж░ ржорж╛ржХрзЗ ржжрж┐ржЪрзНржЫрж┐ ржарж╛ржк ЁЯШВ", delay: 800},
        {text: "рж╣рж┐ржЬрж▓рж╛ ржорж╛ржЧрж┐рж░ ржкрзЛрж▓рж╛  тЬЛ", delay: 700},
        {text: "рждрж░ ржорж╛рзЯрзЗрж░рзЗ рж╣рж╛рждрж┐рж░ рж▓рзНржпрж╛ржУрзЬрж╛ ржжрж┐рзЯрж╛ ржЪрзБржжрзБржо", delay: 1900},
        {text: "рждрж░ ржмрзЛржи ржнрзЛржжрж╛ ржЫрж┐рж▓рзНрж▓рж╛ рж▓ржмржг рж▓рж╛ржЧрж╛рзЯ ржжрж┐ржорзБ", delay: 1600},
        {text: "ржлрж╛ржЯрж╛ ржХржирзНржбржорзЗрж░ ржлрж╕рж▓ред ржЬрж╛ ржнрж╛ржЧЁЯдЦ", delay: 1000}
    ];

    // Start sequence
    await simulateThinking(3000);
    api.sendMessage({ 
        body: `ЁЯТм ${name} -ржХрзЗ ржЪрзЛржжрж╛ рж╕рзЗрж╢ржи рж╢рзБрж░рзБ...\nтЦ░тЦ░тЦ░тЦ▒тЦ▒тЦ▒тЦ▒тЦ▒тЦ▒ 30% рж▓рзЛржбрж┐ржВ`,
        mentions: [tag]
    }, event.threadID);

    // Realistic message delivery
    for (let i = 0; i < messages.length; i++) {
        await simulateThinking(messages[i].delay);
        
        // Simulate message composition errors
        let messageText = messages[i].text;
        if (Math.random() > 0.8) {
            messageText = messageText
                .replace(/\s+\S{0,3}$/, '') // Trim last word
                + '...';
            
            await simulateThinking(800);
            
            // Send correction
            api.sendMessage({
                body: `тЬПя╕П ${messageText.replace('...', '') + name}`,
                mentions: [tag]
            }, event.threadID);
            
            await simulateThinking(600);
            messageText = messages[i].text; // Original text
        }
        
        // Send main message
        api.sendMessage({
            body: `${messageText} ${name}`,
            mentions: [tag]
        }, event.threadID);

        // Simulate network delay
        if (Math.random() > 0.7) {
            await new Promise(resolve => setTimeout(resolve, 3000));
            api.sendMessage({
                body: "ЁЯУ╢ ржирзЗржЯржУржпрж╝рж╛рж░рзНржХ ржХрж╛ржирзЗржХрж╢ржи рж╕ржорж╕рзНржпрж╛... ржкрзБржирж░рж╛ржпрж╝ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ",
            }, event.threadID);
            await simulateThinking(2500);
        }

        // Show progress
        if ((i + 1) % 5 === 0) {
            const progress = Math.min(100, Math.floor((i + 1) / messages.length * 100));
            await simulateThinking(800);
            api.sendMessage({
                body: `ЁЯФД ржкрзНрж░рзЛржЧрзНрж░рзЗрж╕: ${progress}% рж╕ржорзНржкрзВрж░рзНржг\n${'тЦ░'.repeat(progress/10)}${'тЦ▒'.repeat(10 - progress/10)}`
            }, event.threadID);
        }
    }

    // Final sequence
    await simulateThinking(4000);
    api.sendMessage({
        body: `тЬЕ ржЪрзБржжрж╛ рж╕рзЗрж╢ржи рж╕ржорзНржкрзВрж░рзНржг! ${name}-ржПрж░ ржЕржмрж╕рзНржерж╛:\n\n` +
              "тФПтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФУ\n" +
              "тШая╕П Totally roasted!\n" +
              "ЁЯТФ Status: Offline\n" +
              "тФЧтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФЫ\n\n" +
              "тМЪя╕П рж╕ржоржпрж╝: " + new Date().toLocaleTimeString() + "\n" +
              "ЁЯФв ржЯрзЛржЯрж╛рж▓ ржорзЗрж╕рзЗржЬ: " + messages.length + "\n" +
              "тЪбя╕П ржПржирж╛рж░рзНржЬрж┐ ржХржиржЬрж┐ржЙржоржб: 100%"
    }, event.threadID);

    // Simulate app notification
    await new Promise(resolve => setTimeout(resolve, 5000));
    api.sendMessage({
        body: "ЁЯУ▓ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи: 'ржЪрзБржжрж╛ рж╕рзЗрж╢ржи' рж╕ржорзНржкрзВрж░рзНржг рж╣ржпрж╝рзЗржЫрзЗ!",
    }, event.threadID);
};
