const axios = require('axios');
const fs = require('fs');
const path = require('path');

module.exports = {
  config: {
    name: "convert",
    version: "2.0",
    author: "üé© ùêåùê´.ùêíùê¶ùê®ùê§ùêûùê≤ ‚Ä¢ ùêÄùê¨ùê¢ùêü ùêåùêöùê°ùê¶ùêÆùêù üå†",
    countDown: 5,
    role: 0,
    shortDescription: {
      en: "Convert any media link to file (image, audio, video, document)",
      bn: "‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶Æ‡¶ø‡¶°‡¶ø‡¶Ø‡¶º‡¶æ ‡¶≤‡¶ø‡¶Ç‡¶ï‡¶ï‡ßá ‡¶´‡¶æ‡¶á‡¶≤‡ßá ‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®"
    },
    longDescription: {
      en: "Download and send media from a given link (supports jpeg, jpg, png, mp4, mp3, pdf, raw, docx, txt, gif, wav)",
      bn: "‡¶™‡ßç‡¶∞‡¶¶‡¶§‡ßç‡¶§ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶•‡ßá‡¶ï‡ßá ‡¶Æ‡¶ø‡¶°‡¶ø‡¶Ø‡¶º‡¶æ ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ì ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã‡¶∞ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° (‡¶õ‡¶¨‡¶ø, ‡¶Ö‡¶°‡¶ø‡¶ì, ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì, ‡¶°‡¶ï‡ßÅ‡¶Æ‡ßá‡¶®‡ßç‡¶ü)"
    },
    category: "media",
    guide: {
      en: "{pn} [link]",
      bn: "{pn} [‡¶≤‡¶ø‡¶Ç‡¶ï]"
    }
  },

  onStart: async function ({ api, event, args }) {
    const url = args[0];

    if (!url || !url.startsWith('http')) {
      return api.sendMessage('‚ùå ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶†‡¶ø‡¶ï ‡¶Æ‡¶ø‡¶°‡¶ø‡¶Ø‡¶º‡¶æ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¶‡¶ø‡¶®‡•§', event.threadID, event.messageID);
    }

    const validExtensions = ['.jpeg', '.jpg', '.png', '.mp4', '.mp3', '.pdf', '.raw', '.docx', '.txt', '.gif', '.wav'];
    const extension = path.extname(new URL(url).pathname);

    if (!validExtensions.includes(extension.toLowerCase())) {
      return api.sendMessage('‚ùå ‡¶è‡¶á ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡¶ü‡¶ø ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü‡ßá‡¶° ‡¶®‡¶æ‡•§ ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü‡ßá‡¶° ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü: jpeg, jpg, png, mp4, mp3, pdf, raw, docx, txt, gif, wav.', event.threadID, event.messageID);
    }

    try {
      const response = await axios.get(url, { responseType: 'arraybuffer' });
      if (response.status !== 200 || !response.data) {
        return api.sendMessage('‚ö†Ô∏è ‡¶Æ‡¶ø‡¶°‡¶ø‡¶Ø‡¶º‡¶æ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§', event.threadID, event.messageID);
      }

      const filename = path.join(__dirname, `temp_${Date.now()}${extension}`);
      fs.writeFileSync(filename, Buffer.from(response.data, 'binary'));

      api.sendMessage({
        body: `‚úÖ ‡¶Æ‡¶ø‡¶°‡¶ø‡¶Ø‡¶º‡¶æ ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞ ‡¶∏‡¶´‡¶≤: ${url}`,
        attachment: fs.createReadStream(filename)
      }, event.threadID, () => {
        fs.unlinkSync(filename);
      }, event.messageID);

    } catch (error) {
      console.error("Media conversion error:", error);
      api.sendMessage('‚ùå ‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§', event.threadID, event.messageID);
    }
  }
};
