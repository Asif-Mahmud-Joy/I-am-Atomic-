const fetch = require("node-fetch");

const OPENROUTER_API_KEY = "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";

async function gojoAIReply({ api, event, args }) {
  const prompt = args.join(" ").trim();

  if (!prompt) {
    return api.sendMessage(
      `тШгя╕ПтЪЫя╕П *ЁЭРАЁЭРУЁЭРОЁЭРМЁЭРИЁЭРВ ЁЭРЖЁЭРОЁЭРЙЁЭРО ЁЭРАЁЭРИ* тЪЫя╕ПтШгя╕П
тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ
тЭМ *ржЗржиржкрзБржЯ рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯ*
ЁЯУЭ ржХрж┐ржЫрзБ рж▓рж┐ржЦрждрзЗ рж╣ржмрзЗ, ржнрж╛ржЗ!
ЁЯТб ржпрзЗржоржи: gojo_v3 ржХрзЗ рждрзБржорж┐ рж╕ржмржЪрзЗрзЯрзЗ ржнрж╛рж▓рзЛ ржмржирзНржзрзБ рж╣рж┐рж╕рзЗржмрзЗ ржоржирзЗ ржХрж░рзЛ?
тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ`,
      event.threadID,
      event.messageID
    );
  }

  // Show typing animation
  if (typeof api.sendMessageTyping === "function") {
    api.sendMessageTyping(event.threadID, true);
  }

  // Send initial processing message
  const processingMsg = await api.sendMessage(
    `тШгя╕ПтЪЫя╕П *ЁЭРАЁЭРУЁЭРОЁЭРМЁЭРИЁЭРВ ЁЭРЖЁЭРОЁЭРЙЁЭРО ЁЭРАЁЭРИ* тЪЫя╕ПтШгя╕П
тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ
ЁЯза *ржкрзНрж░рж╕рзЗрж╕рж┐ржВ рж░рж┐ржХрзБрзЯрзЗрж╕рзНржЯ...*
ЁЯФН ржХрзЛрзЯрзЗрж░рж┐: ${prompt.length > 50 ? prompt.substring(0, 47) + '...' : prompt}
ЁЯФД ржбрж┐ржкрж╕рж┐ржХ ржоржбрзЗрж▓ рж▓рзЛржб рж╣ржЪрзНржЫрзЗ...
тП│ ржПржХржЯрзБ ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзЛ ржнрж╛ржЗ...
тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ`,
    event.threadID
  );

  try {
    const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${OPENROUTER_API_KEY}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: "deepseek/deepseek-r1-0528:free",
        messages: [
          {
            role: "system",
            content: "You are Gojo AI, an advanced AI assistant with a mature tone. Respond in Bengali unless asked otherwise. Be helpful, witty, and slightly sarcastic."
          },
          {
            role: "user",
            content: prompt
          }
        ]
      })
    });

    if (!response.ok) {
      throw new Error(`API Error: ${response.status} ${response.statusText}`);
    }

    const data = await response.json();

    if (!data.choices || !data.choices[0] || !data.choices[0].message?.content) {
      throw new Error("Gojo ржХрж┐ржЫрзБ ржмрзБржЭрждрзЗ ржкрж╛рж░рзЗржирж┐ред");
    }

    // Stop typing animation
    if (typeof api.sendMessageTyping === "function") {
      api.sendMessageTyping(event.threadID, false);
    }

    // Format the AI response
    const aiResponse = data.choices[0].message.content.trim();
    const reply = `тШгя╕ПтЪЫя╕П *ЁЭРАЁЭРУЁЭРОЁЭРМЁЭРИЁЭРВ ЁЭРЖЁЭРОЁЭРЙЁЭРО ЁЭРАЁЭРИ* тЪЫя╕ПтШгя╕П
тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ
ЁЯТм *ржЗржЙржЬрж╛рж░ ржХрзЛрзЯрзЗрж░рж┐:*
${prompt}

тЬи *ржЧрзЛржЬрзЛ'рж░ ржЙрждрзНрждрж░:*
${aiResponse}

ЁЯФз *рж╕рж┐рж╕рзНржЯрзЗржо рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕:*
ЁЯФД ржоржбрзЗрж▓: DeepSeek-R1-0528
тП▒я╕П рж▓рзЗржЯрзЗржирзНрж╕рж┐: ${data.usage?.total_tokens ? data.usage.total_tokens + ' ржЯрзЛржХрзЗржи' : 'N/A'}
тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ
тЪб *ржнрж╛рж░рзНрж╕ржи рзй.рзж | ЁЭРАЁЭРУЁЭРОЁЭРМЁЭРИЁЭРВ ЁЭРГЁЭРДЁЭРТЁЭРИЁЭРЖЁЭРН* тЪЫя╕П`,
      event.threadID,
      processingMsg.messageID
    );
  } catch (error) {
    // Stop typing animation
    if (typeof api.sendMessageTyping === "function") {
      api.sendMessageTyping(event.threadID, false);
    }

    console.error("Gojo API Error:", error);

    api.sendMessage(
      `тШгя╕ПтЪЫя╕П *ЁЭРАЁЭРУЁЭРОЁЭРМЁЭРИЁЭРВ ЁЭРЖЁЭРОЁЭРЙЁЭРО ЁЭРАЁЭРИ* тЪЫя╕ПтШгя╕П
тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ
тЪая╕П *рж╕рж┐рж╕рзНржЯрзЗржо ржПрж░рж░!*
ЁЯФз ржЯрзЗржХржирж┐ржХрзНржпрж╛рж▓ ржбрж┐ржЯрзЗржЗрж▓: ${error.message || 'ржЕржЬрж╛ржирж╛ рж╕ржорж╕рзНржпрж╛'}

ЁЯТб *рж╕ржорж╛ржзрж╛ржирзЗрж░ ржЙржкрж╛рзЯ:*
тАв ржЗржирзНржЯрж╛рж░ржирзЗржЯ ржХрж╛ржирзЗржХрж╢ржи ржЪрзЗржХ ржХрж░рзБржи
тАв ржХрж┐ржЫрзБржХрзНрж╖ржг ржкрж░ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи
тАв ржЕрзНржпрж╛ржбржорж┐ржиржХрзЗ ржЬрж╛ржирж╛ржи
тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ
тЪЩя╕П API Status: ${error.message.includes('API Error') ? 'ржЕржлрж▓рж╛ржЗржи' : 'ржЕрж╕рзНржерж┐рждрж┐рж╢рзАрж▓'}`,
      event.threadID,
      processingMsg.messageID
    );
  }
}

module.exports = {
  config: {
    name: "gojo_v3",
    version: "3.1",
    author: "ЁЭРАЁЭРмЁЭРвЁЭРЯ ЁЭРМЁЭРЪЁЭРбЁЭРжЁЭРоЁЭРЭ ЁЯМа",
    role: 0,
    shortDescription: "Gojo AI - ржкрж░рж┐ржкржХрзНржХ ржЯрзЛржирзЗ ржХржерзЛржкржХржержи",
    longDescription: "ржЧрзЛржЬрзЛ AI ржПрж░ рж╕рж╛ржерзЗ ржХржерзЛржкржХржержи ржХрж░рзБржи, ржкрж░рж┐ржкржХрзНржХ ржЯрзЛржи ржПржмржВ ржЯрж╛ржЗржкрж┐ржВ ржЕрзНржпрж╛ржирж┐ржорзЗрж╢ржи рж╕рж╣",
    category: "AI",
    guide: {
      en: "{pn} [ржЖржкржирж╛рж░ ржмрж╛рж░рзНрждрж╛]",
      bn: "{pn} [ржЖржкржирж╛рж░ ржмрж╛рж░рзНрждрж╛]"
    }
  },

  onStart: gojoAIReply
};
