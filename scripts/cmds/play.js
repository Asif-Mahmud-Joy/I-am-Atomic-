module.exports = {
  config: {
    name: "play",
    version: "2.0",
    role: 0,
    author: "KSHITIZ + Updated by ChatGPT",
    cooldowns: 5,
    shortDescription: {
      en: "Play song with lyrics",
      bn: "ржЧрж╛ржирзЗрж░ рж╕рж╛ржерзЗржЗ рж▓рж┐рж░рж┐ржХ рж╢рзЛржирж╛ржи"
    },
    longDescription: {
      en: "Always use official music title for accurate lyrics.",
      bn: "рж╕ржарж┐ржХ рж▓рж┐рж░рж┐ржХ ржкрзЗрждрзЗ ржЕржлрж┐рж╕рж┐ржпрж╝рж╛рж▓ ржЧрж╛ржи ржЯрж╛ржЗржЯрзЗрж▓ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред"
    },
    category: "music",
    guide: {
      en: "{pn} play (song name)",
      bn: "{pn} play (ржЧрж╛ржирзЗрж░ ржирж╛ржо)"
    },
    dependencies: {
      "fs-extra": "",
      "request": "",
      "axios": "",
      "ytdl-core": "",
      "yt-search": ""
    }
  },

  onStart: async ({ api, event }) => {
    const axios = require("axios");
    const fs = require("fs-extra");
    const ytdl = require("ytdl-core");
    const yts = require("yt-search");

    const input = event.body;
    const song = input.slice(input.indexOf(" ") + 1);

    if (!song) return api.sendMessage("тЪая╕П ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЧрж╛ржирзЗрж░ ржирж╛ржо рж▓рж┐ржЦрзБржиред\nЁЯФК ржЙржжрж╛рж╣рж░ржг: play Tum Hi Ho", event.threadID);

    try {
      api.sendMessage(`ЁЯХ╡я╕ПтАНтЩВя╕П ржЧрж╛ржирзЗрж░ ржирж╛ржоржГ "${song}"\nЁЯФН рж▓рж┐рж░рж┐ржХрзНрж╕ ржПржмржВ ржЧрж╛ржи ржЦрзЛржБржЬрж╛ рж╣ржЪрзНржЫрзЗ...тП│`, event.threadID);

      const lyricsRes = await axios.get(`https://lyrist.vercel.app/api/${encodeURIComponent(song)}`);
      const { lyrics = "Lyrics not found.", title = song, artist = "Unknown Artist" } = lyricsRes.data;

      const ytRes = await yts(song);
      const video = ytRes.videos[0];
      if (!video) return api.sendMessage("тЭМ ржЧрж╛ржи ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐! ржЕржирзНржп ржирж╛ржо ржжрж┐рзЯрзЗ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред", event.threadID);

      const filePath = `${__dirname}/cache/${event.senderID}_song.mp3`;
      const stream = ytdl(video.url, { filter: "audioonly" });

      stream.pipe(fs.createWriteStream(filePath));

      stream.on("end", async () => {
        if (fs.statSync(filePath).size > 26214400) {
          fs.unlinkSync(filePath);
          return api.sendMessage("тЭМ ржЧрж╛ржиржЯрж┐ 25MB ржПрж░ ржмрзЗрж╢рж┐ рж╣ржУрзЯрж╛рзЯ ржкрж╛ржарж╛ржирзЛ ржпрж╛ржЪрзНржЫрзЗ ржирж╛ред", event.threadID);
        }

        api.sendMessage({
          body: `ЁЯО╡ Title: ${title}\nЁЯОд Artist: ${artist}\nЁЯУЬ Lyrics:\n${lyrics}`,
          attachment: fs.createReadStream(filePath)
        }, event.threadID, () => fs.unlinkSync(filePath));
      });

    } catch (err) {
      console.error("[PLAY ERROR]", err);
      api.sendMessage("тЪая╕П ржХрж┐ржЫрзБ ржнрзБрж▓ рж╣ржпрж╝рзЗржЫрзЗ! ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред", event.threadID);
    }
  }
};
